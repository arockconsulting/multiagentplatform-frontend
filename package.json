```json
{
  "name": "landing-page",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "@testing-library/jest-dom": "^5.17.0",
    "@testing-library/react": "^13.4.0",
    "@testing-library/user-event": "^13.5.0",
    "@types/jest": "^27.5.2",
    "@types/node": "^16.18.76",
    "@types/react": "^18.2.47",
    "@types/react-dom": "^18.2.18",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-scripts": "5.0.1",
    "styled-components": "^6.1.8",
    "typescript": "^4.9.5",
    "web-vitals": "^2.1.4"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "devDependencies": {
    "@types/styled-components": "^5.1.34"
  }
}
```

```typescript
// src/types/index.ts
export interface ButtonProps {
  /** The text to display in the button. */
  children: React.ReactNode;
  /** The onClick handler for the button. */
  onClick?: () => void;
  /** Optional styling variant */
  variant?: 'primary' | 'secondary';
}

export interface HeroProps {
  title: string;
  subtitle: string;
  imageSrc: string;
  altText: string;
}

export interface FeatureProps {
  title: string;
  description: string;
  icon: React.ReactNode;
}
```

```typescript
// src/components/Button/Button.tsx
import React from 'react';
import styled, { css } from 'styled-components';
import { ButtonProps } from '../../types';

/**
 * A reusable button component.
 */
const Button: React.FC<ButtonProps> = ({ children, onClick, variant = 'primary' }) => {
  return (
    <StyledButton onClick={onClick} variant={variant}>
      {children}
    </StyledButton>
  );
};

interface StyledButtonProps {
  variant: 'primary' | 'secondary';
}

const StyledButton = styled.button<StyledButtonProps>`
  padding: 12px 24px;
  border-radius: 8px;
  font-size: 16px;
  cursor: pointer;
  transition: background-color 0.3s ease;
  border: none;

  ${({ variant }) =>
    variant === 'primary'
      ? css`
          background-color: #007bff;
          color: white;

          &:hover {
            background-color: #0056b3;
          }
        `
      : css`
          background-color: #6c757d;
          color: white;

          &:hover {
            background-color: #545b62;
          }
        `}
`;

export default Button;
```

```typescript
// src/components/Hero/Hero.tsx
import React from 'react';
import styled from 'styled-components';
import { HeroProps } from '../../types';

/**
 * A Hero section component for the landing page.
 */
const Hero: React.FC<HeroProps> = ({ title, subtitle, imageSrc, altText }) => {
  return (
    <HeroContainer>
      <TextContainer>
        <h1>{title}</h1>
        <p>{subtitle}</p>
      </TextContainer>
      <ImageContainer>
        <HeroImage src={imageSrc} alt={altText} />
      </ImageContainer>
    </HeroContainer>
  );
};

const HeroContainer = styled.section`
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 40px;
  background-color: #f8f9fa;
  border-radius: 10px;
  margin-bottom: 20px;

  @media (max-width: 768px) {
    flex-direction: column;
    text-align: center;
  }
`;

const TextContainer = styled.div`
  flex: 1;
  padding-right: 20px;

  h1 {
    font-size: 3em;
    margin-bottom: 10px;
  }

  p {
    font-size: 1.2em;
    color: #6c757d;
  }
`;

const ImageContainer = styled.div`
  flex: 1;
  display: flex;
  justify-content: center;
`;

const HeroImage = styled.img`
  max-width: 100%;
  height: auto;
  border-radius: 8px;
`;

export default Hero;
```

```typescript
// src/components/Feature/Feature.tsx
import React from 'react';
import styled from 'styled-components';
import { FeatureProps } from '../../types';

/**
 * A Feature component to highlight key features of the product.
 */
const Feature: React.FC<FeatureProps> = ({ title, description, icon }) => {
  return (
    <FeatureContainer>
      <IconContainer>{icon}</IconContainer>
      <h3>{title}</h3>
      <p>{description}</p>
    </FeatureContainer>
  );
};

const FeatureContainer = styled.div`
  padding: 20px;
  border: 1px solid #ddd;
  border-radius: 8px;
  text-align: center;
  margin-bottom: 20px;
`;

const IconContainer = styled.div`
  font-size: 2em;
  margin-bottom: 10px;
  color: #007bff;
`;

export default Feature;
```

```typescript
// src/App.tsx
import React from 'react';
import styled, { createGlobalStyle } from 'styled-components';
import Hero from './components/Hero/Hero';
import Feature from './components/Feature/Feature';
import Button from './components/Button/Button';
import { FaReact, FaCode, FaCheckCircle } from 'react-icons/fa';

const GlobalStyle = createGlobalStyle`
  body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }
`;

const AppContainer = styled.div`
  max-width: 1200px;
  margin: 0 auto;
  padding: 20px;
`;

const FeaturesSection = styled.section`
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 20px;
  margin-bottom: 40px;
`;

const Footer = styled.footer`
  text-align: center;
  padding: 20px;
  background-color: #f8f9fa;
  border-top: 1px solid #ddd;
`;

/**
 * Main application component for the landing page.
 */
function App() {
  return (
    <>
      <GlobalStyle />
      <AppContainer>
        <Hero
          title="Welcome to Our Awesome Product"
          subtitle="The best solution for your needs."
          imageSrc="https://via.placeholder.com/800x400"
          altText="Product image"
        />

        <FeaturesSection>
          <Feature
            title="Feature 