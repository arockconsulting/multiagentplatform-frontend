```json
{
  "name": "landing-page",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "@testing-library/jest-dom": "^5.17.0",
    "@testing-library/react": "^13.4.0",
    "@testing-library/user-event": "^13.5.0",
    "@types/jest": "^27.5.2",
    "@types/node": "^16.18.76",
    "@types/react": "^18.2.47",
    "@types/react-dom": "^18.2.18",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-scripts": "5.0.1",
    "styled-components": "^6.1.8",
    "typescript": "^4.9.5",
    "web-vitals": "^2.1.4"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "devDependencies": {
    "@types/styled-components": "^5.1.34"
  }
}
```

```typescript
// src/components/Button/Button.tsx
import React from 'react';
import styled from 'styled-components';

interface ButtonProps {
  /** Text to display inside the button */
  children: React.ReactNode;
  /** Optional click handler */
  onClick?: () => void;
  /** Optional ARIA label for accessibility */
  ariaLabel?: string;
  /** Optional styling variants */
  variant?: 'primary' | 'secondary';
}

const StyledButton = styled.button<Pick<ButtonProps, 'variant'>>`
  padding: 10px 20px;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  font-size: 16px;
  font-weight: bold;
  transition: background-color 0.3s ease;

  ${(props) =>
    props.variant === 'primary' &&
    `
    background-color: #007bff;
    color: white;

    &:hover {
      background-color: #0056b3;
    }
  `}

  ${(props) =>
    props.variant === 'secondary' &&
    `
    background-color: #6c757d;
    color: white;

    &:hover {
      background-color: #5a6268;
    }
  `}
`;


/**
 * Reusable Button Component
 */
const Button: React.FC<ButtonProps> = ({ children, onClick, ariaLabel, variant = 'primary' }) => {
  return (
    <StyledButton onClick={onClick} aria-label={ariaLabel} variant={variant}>
      {children}
    </StyledButton>
  );
};

export default Button;
```

```typescript
// src/components/HeroSection/HeroSection.tsx
import React from 'react';
import styled from 'styled-components';
import Button from '../Button/Button';

interface HeroSectionProps {
  title: string;
  subtitle: string;
  buttonText: string;
  onButtonClick?: () => void;
}

const StyledHeroSection = styled.section`
  background-color: #f8f9fa;
  padding: 80px 0;
  text-align: center;

  h1 {
    font-size: 3rem;
    margin-bottom: 20px;
  }

  p {
    font-size: 1.5rem;
    color: #6c757d;
    margin-bottom: 40px;
  }
`;

/**
 * Hero Section Component
 */
const HeroSection: React.FC<HeroSectionProps> = ({ title, subtitle, buttonText, onButtonClick }) => {
  return (
    <StyledHeroSection>
      <h1>{title}</h1>
      <p>{subtitle}</p>
      <Button onClick={onButtonClick}>{buttonText}</Button>
    </StyledHeroSection>
  );
};

export default HeroSection;
```

```typescript
// src/App.tsx
import React from 'react';
import styled from 'styled-components';
import HeroSection from './components/HeroSection/HeroSection';

const AppContainer = styled.div`
  font-family: sans-serif;
  text-align: center;
`;

/**
 * Main App Component
 */
function App() {
  const handleButtonClick = () => {
    alert('Button Clicked!');
  };

  return (
    <AppContainer>
      <HeroSection
        title="Welcome to Our Awesome Landing Page"
        subtitle="Your one-stop solution for all your needs."
        buttonText="Get Started"
        onButtonClick={handleButtonClick}
      />
    </AppContainer>
  );
}

export default App;
```

```typescript
// src/globalStyles.ts
import { createGlobalStyle } from 'styled-components';

const GlobalStyle = createGlobalStyle`
  body {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }
`;

export default GlobalStyle;
```

```typescript
// src/index.tsx
import React from 'react';
import ReactDOM from 'react-dom/client';
import App from './App';
import GlobalStyle from './globalStyles';

const root = ReactDOM.createRoot(
  document.getElementById('root') as HTMLElement
);
root.render(
  <React.StrictMode>
    <GlobalStyle />
    <App />
  </React.StrictMode>
);
```